// =======================================
//
// p10814 [나이순 정렬]
//
// [문제]
// 온라인 저지에 가입한 사람들의 나이와 이름이 가입한 순서대로 주어진다.
// 이때, 회원들을 나이가 증가하는 순으로,
// 나이가 같으면 먼저 가입한 사람이 앞에 오는 순서로 정렬하는 프로그램을 작성하시오.
//
// [입력]
// 첫째 줄에 온라인 저지 회원의 수 N이 주어진다. (1 ≤ N ≤ 100,000)
// 둘째 줄부터 N개의 줄에는 각 회원의 나이와 이름이 공백으로 구분되어 주어진다.
// 나이는 1보다 크거나 같으며,
// 200보다 작거나 같은 정수이고,
// 이름은 알파벳 대소문자로 이루어져 있고,
// 길이가 100보다 작거나 같은 문자열이다.
// 입력은 가입한 순서로 주어진다.
//
// [출력]
// 첫째 줄부터 총 N개의 줄에 걸쳐 온라인 저지 회원을 나이 순,
// 나이가 같으면 가입한 순으로 한 줄에 한 명씩 나이와 이름을 공백으로 구분해 출력한다.
//
// [https://www.acmicpc.net/problem/10814]
//
#include <iostream>
#include <vector>

using namespace std;

// ========================================
// 입력 받을 데이터
// 1. N - 입력 받을 회원 수
// 2. V - 회원 이름을 저장할 벡터
// ========================================
int N;
vector<string> V;
//
//
//
struct User
{
	int idx;
	int age;
	string name;
};

// ========================================
// SORT COMPARE FUNC
// ========================================
bool cmp(User u1, User u2)
{
	if (u1.age == u2.age)
	{
		return u1.idx < u2.idx;
	}
	return u1.age < u2.age;
}

int main()
{
	// ========================================
	// FOR FAST INPUT OUTPUT
	// ========================================
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	// ========================================
	// INPUT
	// ========================================
	//
	// 입력 받을 회원 수를 N에 저장
	//
	int N;
	cin >> N;
	//
	// N개의 회원 정보를 vector<User> V에 입력 받아 저장
	//
	vector<User> V(N);

	for (int i = 0; i < N; i++)
	{
		// 회원 나이, 이름을 입력받아 저장
		cin >> V[i].age >> V[i].name;
		// idx는 가입한 순서로, 정렬할 때 사용하기 위해 저장
		V[i].idx = i;
	}
	//
	//
	//
	// ========================================
	// SORT
	// ========================================
	// cmp에 의해 V 정렬
	// 1. 나이 오름차순
	// 2. 나이가 같은 경우 idx 오름차순
	//
	sort(V.begin(), V.end(), cmp);

	// ========================================
	// PRINT
	// ========================================
	for (auto u : V)
	{
		cout << u.age << ' ' << u.name << '\n';
	}
	return 0;
}
